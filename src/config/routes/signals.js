import { reportBuilder, reports, signals } from 'src/pages';
import App from 'src/components/layout/App';
import { hasGrants } from 'src/helpers/conditions';
import { hasAccountOptionEnabled, isAccountUiOptionSet } from 'src/helpers/conditions/account';

const reportsRoutes = [
  {
    path: '/reports',
    redirect: '/reports/summary',
    category: 'Signals Analytics',
    subcategory: 'Summary',
  },
  {
    path: '/reports/summary',
    component: reports.SummaryPage,
    layout: App,
    title: 'Summary Report | Signals Analytics',
    supportDocSearch: 'reporting',
    category: 'Signals Analytics',
    subcategory: 'Summary',
  },
  {
    path: '/reports/bounce',
    component: reports.BouncePage,
    layout: App,
    title: 'Bounce Report | Signals Analytics',
    supportDocSearch: 'bounce',
    category: 'Signals Analytics',
    subcategory: 'Bounce',
  },
  {
    path: '/reports/rejections',
    component: reports.RejectionPage,
    layout: App,
    title: 'Rejections Report | Signals Analytics',
    supportDocSearch: 'reject',
    category: 'Signals Analytics',
    subcategory: 'Rejections',
  },
  {
    path: '/reports/accepted',
    component: reports.AcceptedPage,
    layout: App,
    title: 'Accepted Report | Signals Analytics',
    supportDocSearch: 'accept',
    category: 'Signals Analytics',
    subcategory: 'Accepted',
  },
  {
    path: '/reports/delayed',
    component: reports.DelayPage,
    layout: App,
    title: 'Delay Report | Signals Analytics',
    supportDocSearch: 'delay',
    category: 'Signals Analytics',
    subcategory: 'Delayed',
  },
  {
    path: '/reports/engagement',
    component: reports.EngagementPage,
    layout: App,
    title: 'Engagement Report | Signals Analytics',
    supportDocSearch: 'engagement',
    category: 'Signals Analytics',
    subcategory: 'Engagement',
  },
];

const hibanaReportsRoutes = [
  {
    path: '/signals',
    redirect: '/signals/analytics',
    category: 'Signals Analytics',
    subcategory: 'Analytics Report',
  },
  {
    path: '/reports/summary',
    redirect: '/signals/analytics',
    category: 'Signals Analytics',
    subcategory: 'Analytics Report',
  },
  {
    path: '/reports/bounce',
    redirect: '/signals/analytics',
    category: 'Signals Analytics',
    subcategory: 'Analytics Report',
    search: '?report=bounce',
  },
  {
    path: '/reports/rejections',
    redirect: '/signals/analytics',
    category: 'Signals Analytics',
    subcategory: 'Analytics Report',
    search: '?report=rejections',
  },
  {
    path: '/reports/accepted',
    redirect: '/signals/analytics',
    category: 'Signals Analytics',
    subcategory: 'Analytics Report',
    search: '?report=accepted',
  },
  {
    path: '/reports/delayed',
    redirect: '/signals/analytics',
    category: 'Signals Analytics',
    subcategory: 'Analytics Report',
    search: '?report=delayed',
  },
  {
    path: '/reports/engagement',
    redirect: '/signals/analytics',
    category: 'Signals Analytics',
    subcategory: 'Analytics Report',
    search: '?report=engagement',
  },
  {
    path: '/signals/analytics',
    component: reports.SummaryPage,
    layout: App,
    title: 'Analytics Report | Signals Analytics',
    supportDocSearch: 'reporting',
    category: 'Signals Analytics',
    subcategory: 'Analytics Report',
  },
  {
    path: '/signals/schedule/:reportId/',
    component: reportBuilder.ScheduledReportCreatePage,
    condition: isAccountUiOptionSet('allow_scheduled_reports'),
    layout: App,
    title: 'Schedule Report',
  },
];

const signalsRoutes = [
  {
    path: '/reports/message-events',
    component: reports.MessageEventsPage,
    layout: App,
    title: 'Events Search | Events',
    supportDocSearch: 'event',
    category: 'Events',
  },
  {
    path: '/reports/message-events/details/:messageId/:eventId?',
    component: reports.EventPage,
    layout: App,
    title: 'Message History | Events',
    supportDocSearch: 'event',
    category: 'Events',
  },
  {
    path: '/signals/health-score',
    component: signals.HealthScoreDashboard,
    condition: hasGrants('signals/manage'),
    layout: App,
    title: 'Health Score | Signals Analytics',
    supportDocSearch: 'signals',
    category: 'Signals Analytics',
    subcategory: 'Health Score',
  },
  {
    path: '/signals/spam-traps',
    component: signals.SpamTrapDashboard,
    condition: hasGrants('signals/manage'),
    layout: App,
    title: 'Spam Trap Monitoring | Signals Analytics',
    supportDocSearch: 'signals',
    category: 'Signals Analytics',
    subcategory: 'Spam Traps',
  },
  {
    path: '/signals/engagement',
    component: signals.EngagementRecencyDashboard,
    condition: hasGrants('signals/manage'),
    layout: App,
    title: 'Engagement Recency | Signals Analytics',
    supportDocSearch: 'signals',
    category: 'Signals Analytics',
    subcategory: 'Engagement Recency',
  },
  {
    path: '/signals/health-score/:facet/:facetId',
    component: signals.HealthScorePage,
    condition: hasGrants('signals/manage'),
    layout: App,
    title: 'Subaccount | Health Score | Signals Analytics',
    supportDocSearch: 'signals',
    category: 'Signals Analytics',
    subcategory: 'Health Score',
  },
  {
    path: '/signals/spam-traps/:facet/:facetId',
    component: signals.SpamTrapPage,
    condition: hasGrants('signals/manage'),
    layout: App,
    title: 'Spam Trap Monitoring | Signals Analytics',
    supportDocSearch: 'signals',
    category: 'Signals Analytics',
    subcategory: 'Spam Traps',
  },
  {
    path: '/signals/engagement/cohorts/:facet/:facetId',
    component: signals.EngagementRecencyPage,
    condition: hasGrants('signals/manage'),
    layout: App,
    title: 'Engagement Details | Engagement Recency | Signals Analytics',
    supportDocSearch: 'signals',
    category: 'Signals Analytics',
    subcategory: 'Engagement Recency',
  },
  {
    path: '/signals/engagement/engagement-rate/:facet/:facetId',
    component: signals.EngagementRateByCohortPage,
    condition: hasGrants('signals/manage'),
    layout: App,
    title: 'Engagement Rate | Signals Analytics',
    supportDocSearch: 'signals',
    category: 'Signals Analytics',
    subcategory: 'Engagement Recency',
  },
  {
    path: '/signals/engagement/unsubscribes/:facet/:facetId',
    component: signals.UnsubscribeRateByCohortPage,
    condition: hasGrants('signals/manage'),
    layout: App,
    title: 'Signals',
    supportDocSearch: 'signals',
    category: 'Signals Analytics',
    subcategory: 'Engagement Recency',
  },
  {
    path: '/signals/engagement/complaints/:facet/:facetId',
    component: signals.ComplaintsByCohortPage,
    condition: hasGrants('signals/manage'),
    layout: App,
    title: 'Signals',
    supportDocSearch: 'signals',
    category: 'Signals Analytics',
    subcategory: 'Engagement Recency',
  },
  {
    path: '/signals/integration',
    component: signals.IntegrationPage,
    condition: hasAccountOptionEnabled('allow_events_ingest'),
    layout: App,
    title: 'Signals Integration',
    supportDocSearch: 'signals',
    category: 'Configuration',
  },
];

export const hibanaSignalsRoutes = [...hibanaReportsRoutes, ...signalsRoutes];

export default [...reportsRoutes, ...signalsRoutes];
